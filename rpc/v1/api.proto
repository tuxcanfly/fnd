syntax = "proto3";
option go_package = "v1";

service Footnotev1 {
    rpc GetStatus (Empty) returns (GetStatusRes);

    rpc AddPeer (AddPeerReq) returns (Empty);
    rpc BanPeer (BanPeerReq) returns (Empty);
    rpc UnbanPeer (UnbanPeerReq) returns (Empty);
    rpc ListPeers (ListPeersReq) returns (stream ListPeersRes);

    rpc BlobCheckout (BlobCheckoutReq) returns (BlobCheckoutRes);
    rpc BlobWriteSector (BlobWriteSectorReq) returns (BlobWriteSectorRes);
    rpc BlobCommit (BlobCommitReq) returns (BlobCommitRes);
    rpc BlobReadAt (BlobReadAtReq) returns (BlobReadAtRes);

    rpc GetBlobInfo (BlobInfoReq) returns (BlobInfoRes);
    rpc ListBlobInfo (ListBlobInfoReq) returns (stream BlobInfoRes);

    rpc AddSubdomain(AddSubdomainReq) returns (AddSubdomainRes);

    rpc GetNameInfo (NameInfoReq) returns (NameInfoRes);
    rpc ListNameInfo (ListNameInfoReq) returns (stream NameInfoRes);

    rpc SendUpdate (SendUpdateReq) returns (SendUpdateRes);
}

message Empty {
}

message GetStatusRes {
    bytes peerID = 10;
    uint32 peerCount = 20;
    uint32 headerCount = 30;
    uint64 txBytes = 40;
    uint64 rxBytes = 50;
}

message GetNamesReq {
    string start = 1;
    uint32 count = 2;
}

message GetNamesRes {
    string name = 1;
    bytes publicKey = 2;
}

message AddPeerReq {
    bytes peerID = 1;
    string ip = 2;
    bool verifyPeerID = 3;
}

message BanPeerReq {
    string ip = 1;
    uint32 durationMS = 2;
}

message UnbanPeerReq {
    string ip = 1;
}

message ListPeersReq {
}

message ListPeersRes {
    bytes peerID = 1;
    string ip = 2;
    bool banned = 3;
    bool connected = 4;
    uint64 txBytes = 5;
    uint64 rxBytes = 6;
    bool whitelisted = 7;
}

message BlobCheckoutReq {
    string name = 1;
    bool resetEpoch = 2;
}

message BlobCheckoutRes {
    uint32 txID = 1;
    uint32 epochHeight = 2;
    uint32 sectorSize = 3;
    bytes sectorTipHash = 4;
}

message BlobWriteSectorReq {
    uint32 txID = 1;
    bytes data = 2;
}

message BlobWriteSectorRes {
    string writeErr = 1;
}

message BlobCommitReq {
    uint32 txID = 1;
    uint64 timestamp = 2;
    bytes signature = 3;
    bool broadcast = 4;
    uint32 epochHeight = 5;
    uint32 sectorSize = 6;
    bytes sectorTipHash = 7;
}

message BlobCommitRes {
}

message BlobReadAtReq {
    string name = 1;
    uint32 offset = 2;
    uint32 len = 3;
}

message BlobReadAtRes {
    uint32 offset = 1;
    bytes data = 2;
}

message BlobInfoReq {
    string name = 1;
}

message ListBlobInfoReq {
    string start = 1;
}

message BlobInfoRes {
    string name = 1;
    bytes publicKey = 2;
    uint32 importHeight = 3;
    uint32 epochHeight = 4; // protobuf doesn't have uint16
    uint32 sectorSize = 5; //  ditto ^
    bytes sectorTipHash = 6;
    bytes reservedRoot = 7;
    bytes signature = 8;
    uint64 receivedAt = 9;
    uint64 bannedAt = 10;
}

message AddSubdomainReq {
   string name = 1;
   string subdomain = 2;
   uint32 epochHeight = 3;
   uint32 size = 4;
   bytes publicKey = 5;
   bytes signature = 6;
   bool broadcast = 7;
}

message AddSubdomainRes {
}

message NameInfoReq {
    string name = 1;
}

message ListNameInfoReq {
    string start = 1;
}

message SubdomainRes {
    string name = 1;
    bytes publicKey = 2;
    uint32 size = 3;
}

message NameInfoRes {
    string name = 1;
    bytes publicKey = 2;
    uint32 importHeight = 3;
    repeated SubdomainRes subdomains = 4;
}

message SendUpdateReq {
    string name = 1;
}

message SendUpdateRes {
    uint32 recipientCount = 1;
}
