// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package v1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type GetStatusRes struct {
	PeerID               []byte   `protobuf:"bytes,10,opt,name=peerID,proto3" json:"peerID,omitempty"`
	PeerCount            uint32   `protobuf:"varint,20,opt,name=peerCount,proto3" json:"peerCount,omitempty"`
	HeaderCount          uint32   `protobuf:"varint,30,opt,name=headerCount,proto3" json:"headerCount,omitempty"`
	TxBytes              uint64   `protobuf:"varint,40,opt,name=txBytes,proto3" json:"txBytes,omitempty"`
	RxBytes              uint64   `protobuf:"varint,50,opt,name=rxBytes,proto3" json:"rxBytes,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetStatusRes) Reset()         { *m = GetStatusRes{} }
func (m *GetStatusRes) String() string { return proto.CompactTextString(m) }
func (*GetStatusRes) ProtoMessage()    {}
func (*GetStatusRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *GetStatusRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetStatusRes.Unmarshal(m, b)
}
func (m *GetStatusRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetStatusRes.Marshal(b, m, deterministic)
}
func (m *GetStatusRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetStatusRes.Merge(m, src)
}
func (m *GetStatusRes) XXX_Size() int {
	return xxx_messageInfo_GetStatusRes.Size(m)
}
func (m *GetStatusRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetStatusRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetStatusRes proto.InternalMessageInfo

func (m *GetStatusRes) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func (m *GetStatusRes) GetPeerCount() uint32 {
	if m != nil {
		return m.PeerCount
	}
	return 0
}

func (m *GetStatusRes) GetHeaderCount() uint32 {
	if m != nil {
		return m.HeaderCount
	}
	return 0
}

func (m *GetStatusRes) GetTxBytes() uint64 {
	if m != nil {
		return m.TxBytes
	}
	return 0
}

func (m *GetStatusRes) GetRxBytes() uint64 {
	if m != nil {
		return m.RxBytes
	}
	return 0
}

type GetNamesReq struct {
	Start                string   `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Count                uint32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNamesReq) Reset()         { *m = GetNamesReq{} }
func (m *GetNamesReq) String() string { return proto.CompactTextString(m) }
func (*GetNamesReq) ProtoMessage()    {}
func (*GetNamesReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{2}
}

func (m *GetNamesReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamesReq.Unmarshal(m, b)
}
func (m *GetNamesReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamesReq.Marshal(b, m, deterministic)
}
func (m *GetNamesReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamesReq.Merge(m, src)
}
func (m *GetNamesReq) XXX_Size() int {
	return xxx_messageInfo_GetNamesReq.Size(m)
}
func (m *GetNamesReq) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamesReq.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamesReq proto.InternalMessageInfo

func (m *GetNamesReq) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

func (m *GetNamesReq) GetCount() uint32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type GetNamesRes struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetNamesRes) Reset()         { *m = GetNamesRes{} }
func (m *GetNamesRes) String() string { return proto.CompactTextString(m) }
func (*GetNamesRes) ProtoMessage()    {}
func (*GetNamesRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{3}
}

func (m *GetNamesRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetNamesRes.Unmarshal(m, b)
}
func (m *GetNamesRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetNamesRes.Marshal(b, m, deterministic)
}
func (m *GetNamesRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetNamesRes.Merge(m, src)
}
func (m *GetNamesRes) XXX_Size() int {
	return xxx_messageInfo_GetNamesRes.Size(m)
}
func (m *GetNamesRes) XXX_DiscardUnknown() {
	xxx_messageInfo_GetNamesRes.DiscardUnknown(m)
}

var xxx_messageInfo_GetNamesRes proto.InternalMessageInfo

func (m *GetNamesRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GetNamesRes) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

type AddPeerReq struct {
	PeerID               []byte   `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	VerifyPeerID         bool     `protobuf:"varint,3,opt,name=verifyPeerID,proto3" json:"verifyPeerID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddPeerReq) Reset()         { *m = AddPeerReq{} }
func (m *AddPeerReq) String() string { return proto.CompactTextString(m) }
func (*AddPeerReq) ProtoMessage()    {}
func (*AddPeerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{4}
}

func (m *AddPeerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddPeerReq.Unmarshal(m, b)
}
func (m *AddPeerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddPeerReq.Marshal(b, m, deterministic)
}
func (m *AddPeerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddPeerReq.Merge(m, src)
}
func (m *AddPeerReq) XXX_Size() int {
	return xxx_messageInfo_AddPeerReq.Size(m)
}
func (m *AddPeerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_AddPeerReq.DiscardUnknown(m)
}

var xxx_messageInfo_AddPeerReq proto.InternalMessageInfo

func (m *AddPeerReq) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func (m *AddPeerReq) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *AddPeerReq) GetVerifyPeerID() bool {
	if m != nil {
		return m.VerifyPeerID
	}
	return false
}

type BanPeerReq struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	DurationMS           uint32   `protobuf:"varint,2,opt,name=durationMS,proto3" json:"durationMS,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BanPeerReq) Reset()         { *m = BanPeerReq{} }
func (m *BanPeerReq) String() string { return proto.CompactTextString(m) }
func (*BanPeerReq) ProtoMessage()    {}
func (*BanPeerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{5}
}

func (m *BanPeerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BanPeerReq.Unmarshal(m, b)
}
func (m *BanPeerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BanPeerReq.Marshal(b, m, deterministic)
}
func (m *BanPeerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BanPeerReq.Merge(m, src)
}
func (m *BanPeerReq) XXX_Size() int {
	return xxx_messageInfo_BanPeerReq.Size(m)
}
func (m *BanPeerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BanPeerReq.DiscardUnknown(m)
}

var xxx_messageInfo_BanPeerReq proto.InternalMessageInfo

func (m *BanPeerReq) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *BanPeerReq) GetDurationMS() uint32 {
	if m != nil {
		return m.DurationMS
	}
	return 0
}

type UnbanPeerReq struct {
	Ip                   string   `protobuf:"bytes,1,opt,name=ip,proto3" json:"ip,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UnbanPeerReq) Reset()         { *m = UnbanPeerReq{} }
func (m *UnbanPeerReq) String() string { return proto.CompactTextString(m) }
func (*UnbanPeerReq) ProtoMessage()    {}
func (*UnbanPeerReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{6}
}

func (m *UnbanPeerReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UnbanPeerReq.Unmarshal(m, b)
}
func (m *UnbanPeerReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UnbanPeerReq.Marshal(b, m, deterministic)
}
func (m *UnbanPeerReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UnbanPeerReq.Merge(m, src)
}
func (m *UnbanPeerReq) XXX_Size() int {
	return xxx_messageInfo_UnbanPeerReq.Size(m)
}
func (m *UnbanPeerReq) XXX_DiscardUnknown() {
	xxx_messageInfo_UnbanPeerReq.DiscardUnknown(m)
}

var xxx_messageInfo_UnbanPeerReq proto.InternalMessageInfo

func (m *UnbanPeerReq) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

type ListPeersReq struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPeersReq) Reset()         { *m = ListPeersReq{} }
func (m *ListPeersReq) String() string { return proto.CompactTextString(m) }
func (*ListPeersReq) ProtoMessage()    {}
func (*ListPeersReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{7}
}

func (m *ListPeersReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPeersReq.Unmarshal(m, b)
}
func (m *ListPeersReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPeersReq.Marshal(b, m, deterministic)
}
func (m *ListPeersReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPeersReq.Merge(m, src)
}
func (m *ListPeersReq) XXX_Size() int {
	return xxx_messageInfo_ListPeersReq.Size(m)
}
func (m *ListPeersReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPeersReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListPeersReq proto.InternalMessageInfo

type ListPeersRes struct {
	PeerID               []byte   `protobuf:"bytes,1,opt,name=peerID,proto3" json:"peerID,omitempty"`
	Ip                   string   `protobuf:"bytes,2,opt,name=ip,proto3" json:"ip,omitempty"`
	Banned               bool     `protobuf:"varint,3,opt,name=banned,proto3" json:"banned,omitempty"`
	Connected            bool     `protobuf:"varint,4,opt,name=connected,proto3" json:"connected,omitempty"`
	TxBytes              uint64   `protobuf:"varint,5,opt,name=txBytes,proto3" json:"txBytes,omitempty"`
	RxBytes              uint64   `protobuf:"varint,6,opt,name=rxBytes,proto3" json:"rxBytes,omitempty"`
	Whitelisted          bool     `protobuf:"varint,7,opt,name=whitelisted,proto3" json:"whitelisted,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListPeersRes) Reset()         { *m = ListPeersRes{} }
func (m *ListPeersRes) String() string { return proto.CompactTextString(m) }
func (*ListPeersRes) ProtoMessage()    {}
func (*ListPeersRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{8}
}

func (m *ListPeersRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListPeersRes.Unmarshal(m, b)
}
func (m *ListPeersRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListPeersRes.Marshal(b, m, deterministic)
}
func (m *ListPeersRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListPeersRes.Merge(m, src)
}
func (m *ListPeersRes) XXX_Size() int {
	return xxx_messageInfo_ListPeersRes.Size(m)
}
func (m *ListPeersRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ListPeersRes.DiscardUnknown(m)
}

var xxx_messageInfo_ListPeersRes proto.InternalMessageInfo

func (m *ListPeersRes) GetPeerID() []byte {
	if m != nil {
		return m.PeerID
	}
	return nil
}

func (m *ListPeersRes) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *ListPeersRes) GetBanned() bool {
	if m != nil {
		return m.Banned
	}
	return false
}

func (m *ListPeersRes) GetConnected() bool {
	if m != nil {
		return m.Connected
	}
	return false
}

func (m *ListPeersRes) GetTxBytes() uint64 {
	if m != nil {
		return m.TxBytes
	}
	return 0
}

func (m *ListPeersRes) GetRxBytes() uint64 {
	if m != nil {
		return m.RxBytes
	}
	return 0
}

func (m *ListPeersRes) GetWhitelisted() bool {
	if m != nil {
		return m.Whitelisted
	}
	return false
}

type CheckoutReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckoutReq) Reset()         { *m = CheckoutReq{} }
func (m *CheckoutReq) String() string { return proto.CompactTextString(m) }
func (*CheckoutReq) ProtoMessage()    {}
func (*CheckoutReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{9}
}

func (m *CheckoutReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckoutReq.Unmarshal(m, b)
}
func (m *CheckoutReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckoutReq.Marshal(b, m, deterministic)
}
func (m *CheckoutReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckoutReq.Merge(m, src)
}
func (m *CheckoutReq) XXX_Size() int {
	return xxx_messageInfo_CheckoutReq.Size(m)
}
func (m *CheckoutReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckoutReq.DiscardUnknown(m)
}

var xxx_messageInfo_CheckoutReq proto.InternalMessageInfo

func (m *CheckoutReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type CheckoutRes struct {
	TxID                 uint32   `protobuf:"varint,1,opt,name=txID,proto3" json:"txID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CheckoutRes) Reset()         { *m = CheckoutRes{} }
func (m *CheckoutRes) String() string { return proto.CompactTextString(m) }
func (*CheckoutRes) ProtoMessage()    {}
func (*CheckoutRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{10}
}

func (m *CheckoutRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CheckoutRes.Unmarshal(m, b)
}
func (m *CheckoutRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CheckoutRes.Marshal(b, m, deterministic)
}
func (m *CheckoutRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CheckoutRes.Merge(m, src)
}
func (m *CheckoutRes) XXX_Size() int {
	return xxx_messageInfo_CheckoutRes.Size(m)
}
func (m *CheckoutRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CheckoutRes.DiscardUnknown(m)
}

var xxx_messageInfo_CheckoutRes proto.InternalMessageInfo

func (m *CheckoutRes) GetTxID() uint32 {
	if m != nil {
		return m.TxID
	}
	return 0
}

type WriteAtReq struct {
	TxID                 uint32   `protobuf:"varint,1,opt,name=txID,proto3" json:"txID,omitempty"`
	Offset               uint32   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Data                 []byte   `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteAtReq) Reset()         { *m = WriteAtReq{} }
func (m *WriteAtReq) String() string { return proto.CompactTextString(m) }
func (*WriteAtReq) ProtoMessage()    {}
func (*WriteAtReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{11}
}

func (m *WriteAtReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteAtReq.Unmarshal(m, b)
}
func (m *WriteAtReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteAtReq.Marshal(b, m, deterministic)
}
func (m *WriteAtReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteAtReq.Merge(m, src)
}
func (m *WriteAtReq) XXX_Size() int {
	return xxx_messageInfo_WriteAtReq.Size(m)
}
func (m *WriteAtReq) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteAtReq.DiscardUnknown(m)
}

var xxx_messageInfo_WriteAtReq proto.InternalMessageInfo

func (m *WriteAtReq) GetTxID() uint32 {
	if m != nil {
		return m.TxID
	}
	return 0
}

func (m *WriteAtReq) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *WriteAtReq) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type WriteAtRes struct {
	BytesWritten         uint32   `protobuf:"varint,1,opt,name=bytesWritten,proto3" json:"bytesWritten,omitempty"`
	WriteErr             string   `protobuf:"bytes,2,opt,name=writeErr,proto3" json:"writeErr,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WriteAtRes) Reset()         { *m = WriteAtRes{} }
func (m *WriteAtRes) String() string { return proto.CompactTextString(m) }
func (*WriteAtRes) ProtoMessage()    {}
func (*WriteAtRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{12}
}

func (m *WriteAtRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WriteAtRes.Unmarshal(m, b)
}
func (m *WriteAtRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WriteAtRes.Marshal(b, m, deterministic)
}
func (m *WriteAtRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WriteAtRes.Merge(m, src)
}
func (m *WriteAtRes) XXX_Size() int {
	return xxx_messageInfo_WriteAtRes.Size(m)
}
func (m *WriteAtRes) XXX_DiscardUnknown() {
	xxx_messageInfo_WriteAtRes.DiscardUnknown(m)
}

var xxx_messageInfo_WriteAtRes proto.InternalMessageInfo

func (m *WriteAtRes) GetBytesWritten() uint32 {
	if m != nil {
		return m.BytesWritten
	}
	return 0
}

func (m *WriteAtRes) GetWriteErr() string {
	if m != nil {
		return m.WriteErr
	}
	return ""
}

type TruncateReq struct {
	TxID                 uint32   `protobuf:"varint,1,opt,name=txID,proto3" json:"txID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TruncateReq) Reset()         { *m = TruncateReq{} }
func (m *TruncateReq) String() string { return proto.CompactTextString(m) }
func (*TruncateReq) ProtoMessage()    {}
func (*TruncateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{13}
}

func (m *TruncateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TruncateReq.Unmarshal(m, b)
}
func (m *TruncateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TruncateReq.Marshal(b, m, deterministic)
}
func (m *TruncateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TruncateReq.Merge(m, src)
}
func (m *TruncateReq) XXX_Size() int {
	return xxx_messageInfo_TruncateReq.Size(m)
}
func (m *TruncateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TruncateReq.DiscardUnknown(m)
}

var xxx_messageInfo_TruncateReq proto.InternalMessageInfo

func (m *TruncateReq) GetTxID() uint32 {
	if m != nil {
		return m.TxID
	}
	return 0
}

type TruncateRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TruncateRes) Reset()         { *m = TruncateRes{} }
func (m *TruncateRes) String() string { return proto.CompactTextString(m) }
func (*TruncateRes) ProtoMessage()    {}
func (*TruncateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{14}
}

func (m *TruncateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TruncateRes.Unmarshal(m, b)
}
func (m *TruncateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TruncateRes.Marshal(b, m, deterministic)
}
func (m *TruncateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TruncateRes.Merge(m, src)
}
func (m *TruncateRes) XXX_Size() int {
	return xxx_messageInfo_TruncateRes.Size(m)
}
func (m *TruncateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TruncateRes.DiscardUnknown(m)
}

var xxx_messageInfo_TruncateRes proto.InternalMessageInfo

type PreCommitReq struct {
	TxID                 uint32   `protobuf:"varint,1,opt,name=txID,proto3" json:"txID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreCommitReq) Reset()         { *m = PreCommitReq{} }
func (m *PreCommitReq) String() string { return proto.CompactTextString(m) }
func (*PreCommitReq) ProtoMessage()    {}
func (*PreCommitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{15}
}

func (m *PreCommitReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreCommitReq.Unmarshal(m, b)
}
func (m *PreCommitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreCommitReq.Marshal(b, m, deterministic)
}
func (m *PreCommitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreCommitReq.Merge(m, src)
}
func (m *PreCommitReq) XXX_Size() int {
	return xxx_messageInfo_PreCommitReq.Size(m)
}
func (m *PreCommitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_PreCommitReq.DiscardUnknown(m)
}

var xxx_messageInfo_PreCommitReq proto.InternalMessageInfo

func (m *PreCommitReq) GetTxID() uint32 {
	if m != nil {
		return m.TxID
	}
	return 0
}

type PreCommitRes struct {
	MerkleRoot           []byte   `protobuf:"bytes,1,opt,name=merkleRoot,proto3" json:"merkleRoot,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PreCommitRes) Reset()         { *m = PreCommitRes{} }
func (m *PreCommitRes) String() string { return proto.CompactTextString(m) }
func (*PreCommitRes) ProtoMessage()    {}
func (*PreCommitRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{16}
}

func (m *PreCommitRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PreCommitRes.Unmarshal(m, b)
}
func (m *PreCommitRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PreCommitRes.Marshal(b, m, deterministic)
}
func (m *PreCommitRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PreCommitRes.Merge(m, src)
}
func (m *PreCommitRes) XXX_Size() int {
	return xxx_messageInfo_PreCommitRes.Size(m)
}
func (m *PreCommitRes) XXX_DiscardUnknown() {
	xxx_messageInfo_PreCommitRes.DiscardUnknown(m)
}

var xxx_messageInfo_PreCommitRes proto.InternalMessageInfo

func (m *PreCommitRes) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

type CommitReq struct {
	TxID                 uint32   `protobuf:"varint,1,opt,name=txID,proto3" json:"txID,omitempty"`
	Timestamp            uint64   `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature            []byte   `protobuf:"bytes,3,opt,name=signature,proto3" json:"signature,omitempty"`
	Broadcast            bool     `protobuf:"varint,4,opt,name=broadcast,proto3" json:"broadcast,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitReq) Reset()         { *m = CommitReq{} }
func (m *CommitReq) String() string { return proto.CompactTextString(m) }
func (*CommitReq) ProtoMessage()    {}
func (*CommitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{17}
}

func (m *CommitReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitReq.Unmarshal(m, b)
}
func (m *CommitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitReq.Marshal(b, m, deterministic)
}
func (m *CommitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitReq.Merge(m, src)
}
func (m *CommitReq) XXX_Size() int {
	return xxx_messageInfo_CommitReq.Size(m)
}
func (m *CommitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitReq.DiscardUnknown(m)
}

var xxx_messageInfo_CommitReq proto.InternalMessageInfo

func (m *CommitReq) GetTxID() uint32 {
	if m != nil {
		return m.TxID
	}
	return 0
}

func (m *CommitReq) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *CommitReq) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *CommitReq) GetBroadcast() bool {
	if m != nil {
		return m.Broadcast
	}
	return false
}

type CommitRes struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitRes) Reset()         { *m = CommitRes{} }
func (m *CommitRes) String() string { return proto.CompactTextString(m) }
func (*CommitRes) ProtoMessage()    {}
func (*CommitRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{18}
}

func (m *CommitRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitRes.Unmarshal(m, b)
}
func (m *CommitRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitRes.Marshal(b, m, deterministic)
}
func (m *CommitRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitRes.Merge(m, src)
}
func (m *CommitRes) XXX_Size() int {
	return xxx_messageInfo_CommitRes.Size(m)
}
func (m *CommitRes) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitRes.DiscardUnknown(m)
}

var xxx_messageInfo_CommitRes proto.InternalMessageInfo

type ReadAtReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Offset               uint32   `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"`
	Len                  uint32   `protobuf:"varint,3,opt,name=len,proto3" json:"len,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAtReq) Reset()         { *m = ReadAtReq{} }
func (m *ReadAtReq) String() string { return proto.CompactTextString(m) }
func (*ReadAtReq) ProtoMessage()    {}
func (*ReadAtReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{19}
}

func (m *ReadAtReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAtReq.Unmarshal(m, b)
}
func (m *ReadAtReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAtReq.Marshal(b, m, deterministic)
}
func (m *ReadAtReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAtReq.Merge(m, src)
}
func (m *ReadAtReq) XXX_Size() int {
	return xxx_messageInfo_ReadAtReq.Size(m)
}
func (m *ReadAtReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAtReq.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAtReq proto.InternalMessageInfo

func (m *ReadAtReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ReadAtReq) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadAtReq) GetLen() uint32 {
	if m != nil {
		return m.Len
	}
	return 0
}

type ReadAtRes struct {
	Offset               uint32   `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Data                 []byte   `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadAtRes) Reset()         { *m = ReadAtRes{} }
func (m *ReadAtRes) String() string { return proto.CompactTextString(m) }
func (*ReadAtRes) ProtoMessage()    {}
func (*ReadAtRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{20}
}

func (m *ReadAtRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadAtRes.Unmarshal(m, b)
}
func (m *ReadAtRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadAtRes.Marshal(b, m, deterministic)
}
func (m *ReadAtRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadAtRes.Merge(m, src)
}
func (m *ReadAtRes) XXX_Size() int {
	return xxx_messageInfo_ReadAtRes.Size(m)
}
func (m *ReadAtRes) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadAtRes.DiscardUnknown(m)
}

var xxx_messageInfo_ReadAtRes proto.InternalMessageInfo

func (m *ReadAtRes) GetOffset() uint32 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *ReadAtRes) GetData() []byte {
	if m != nil {
		return m.Data
	}
	return nil
}

type BlobInfoReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlobInfoReq) Reset()         { *m = BlobInfoReq{} }
func (m *BlobInfoReq) String() string { return proto.CompactTextString(m) }
func (*BlobInfoReq) ProtoMessage()    {}
func (*BlobInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{21}
}

func (m *BlobInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlobInfoReq.Unmarshal(m, b)
}
func (m *BlobInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlobInfoReq.Marshal(b, m, deterministic)
}
func (m *BlobInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlobInfoReq.Merge(m, src)
}
func (m *BlobInfoReq) XXX_Size() int {
	return xxx_messageInfo_BlobInfoReq.Size(m)
}
func (m *BlobInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_BlobInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_BlobInfoReq proto.InternalMessageInfo

func (m *BlobInfoReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ListBlobInfoReq struct {
	Start                string   `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListBlobInfoReq) Reset()         { *m = ListBlobInfoReq{} }
func (m *ListBlobInfoReq) String() string { return proto.CompactTextString(m) }
func (*ListBlobInfoReq) ProtoMessage()    {}
func (*ListBlobInfoReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{22}
}

func (m *ListBlobInfoReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListBlobInfoReq.Unmarshal(m, b)
}
func (m *ListBlobInfoReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListBlobInfoReq.Marshal(b, m, deterministic)
}
func (m *ListBlobInfoReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListBlobInfoReq.Merge(m, src)
}
func (m *ListBlobInfoReq) XXX_Size() int {
	return xxx_messageInfo_ListBlobInfoReq.Size(m)
}
func (m *ListBlobInfoReq) XXX_DiscardUnknown() {
	xxx_messageInfo_ListBlobInfoReq.DiscardUnknown(m)
}

var xxx_messageInfo_ListBlobInfoReq proto.InternalMessageInfo

func (m *ListBlobInfoReq) GetStart() string {
	if m != nil {
		return m.Start
	}
	return ""
}

type BlobInfoRes struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	PublicKey            []byte   `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	ImportHeight         uint32   `protobuf:"varint,3,opt,name=importHeight,proto3" json:"importHeight,omitempty"`
	Timestamp            uint64   `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	MerkleRoot           []byte   `protobuf:"bytes,5,opt,name=merkleRoot,proto3" json:"merkleRoot,omitempty"`
	ReservedRoot         []byte   `protobuf:"bytes,6,opt,name=reservedRoot,proto3" json:"reservedRoot,omitempty"`
	ReceivedAt           uint64   `protobuf:"varint,7,opt,name=receivedAt,proto3" json:"receivedAt,omitempty"`
	Signature            []byte   `protobuf:"bytes,8,opt,name=signature,proto3" json:"signature,omitempty"`
	Timebank             uint32   `protobuf:"varint,9,opt,name=timebank,proto3" json:"timebank,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BlobInfoRes) Reset()         { *m = BlobInfoRes{} }
func (m *BlobInfoRes) String() string { return proto.CompactTextString(m) }
func (*BlobInfoRes) ProtoMessage()    {}
func (*BlobInfoRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{23}
}

func (m *BlobInfoRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BlobInfoRes.Unmarshal(m, b)
}
func (m *BlobInfoRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BlobInfoRes.Marshal(b, m, deterministic)
}
func (m *BlobInfoRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BlobInfoRes.Merge(m, src)
}
func (m *BlobInfoRes) XXX_Size() int {
	return xxx_messageInfo_BlobInfoRes.Size(m)
}
func (m *BlobInfoRes) XXX_DiscardUnknown() {
	xxx_messageInfo_BlobInfoRes.DiscardUnknown(m)
}

var xxx_messageInfo_BlobInfoRes proto.InternalMessageInfo

func (m *BlobInfoRes) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *BlobInfoRes) GetPublicKey() []byte {
	if m != nil {
		return m.PublicKey
	}
	return nil
}

func (m *BlobInfoRes) GetImportHeight() uint32 {
	if m != nil {
		return m.ImportHeight
	}
	return 0
}

func (m *BlobInfoRes) GetTimestamp() uint64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *BlobInfoRes) GetMerkleRoot() []byte {
	if m != nil {
		return m.MerkleRoot
	}
	return nil
}

func (m *BlobInfoRes) GetReservedRoot() []byte {
	if m != nil {
		return m.ReservedRoot
	}
	return nil
}

func (m *BlobInfoRes) GetReceivedAt() uint64 {
	if m != nil {
		return m.ReceivedAt
	}
	return 0
}

func (m *BlobInfoRes) GetSignature() []byte {
	if m != nil {
		return m.Signature
	}
	return nil
}

func (m *BlobInfoRes) GetTimebank() uint32 {
	if m != nil {
		return m.Timebank
	}
	return 0
}

type SendUpdateReq struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendUpdateReq) Reset()         { *m = SendUpdateReq{} }
func (m *SendUpdateReq) String() string { return proto.CompactTextString(m) }
func (*SendUpdateReq) ProtoMessage()    {}
func (*SendUpdateReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{24}
}

func (m *SendUpdateReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendUpdateReq.Unmarshal(m, b)
}
func (m *SendUpdateReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendUpdateReq.Marshal(b, m, deterministic)
}
func (m *SendUpdateReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendUpdateReq.Merge(m, src)
}
func (m *SendUpdateReq) XXX_Size() int {
	return xxx_messageInfo_SendUpdateReq.Size(m)
}
func (m *SendUpdateReq) XXX_DiscardUnknown() {
	xxx_messageInfo_SendUpdateReq.DiscardUnknown(m)
}

var xxx_messageInfo_SendUpdateReq proto.InternalMessageInfo

func (m *SendUpdateReq) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SendUpdateRes struct {
	RecipientCount       uint32   `protobuf:"varint,1,opt,name=recipientCount,proto3" json:"recipientCount,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendUpdateRes) Reset()         { *m = SendUpdateRes{} }
func (m *SendUpdateRes) String() string { return proto.CompactTextString(m) }
func (*SendUpdateRes) ProtoMessage()    {}
func (*SendUpdateRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{25}
}

func (m *SendUpdateRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendUpdateRes.Unmarshal(m, b)
}
func (m *SendUpdateRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendUpdateRes.Marshal(b, m, deterministic)
}
func (m *SendUpdateRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendUpdateRes.Merge(m, src)
}
func (m *SendUpdateRes) XXX_Size() int {
	return xxx_messageInfo_SendUpdateRes.Size(m)
}
func (m *SendUpdateRes) XXX_DiscardUnknown() {
	xxx_messageInfo_SendUpdateRes.DiscardUnknown(m)
}

var xxx_messageInfo_SendUpdateRes proto.InternalMessageInfo

func (m *SendUpdateRes) GetRecipientCount() uint32 {
	if m != nil {
		return m.RecipientCount
	}
	return 0
}

func init() {
	proto.RegisterType((*Empty)(nil), "Empty")
	proto.RegisterType((*GetStatusRes)(nil), "GetStatusRes")
	proto.RegisterType((*GetNamesReq)(nil), "GetNamesReq")
	proto.RegisterType((*GetNamesRes)(nil), "GetNamesRes")
	proto.RegisterType((*AddPeerReq)(nil), "AddPeerReq")
	proto.RegisterType((*BanPeerReq)(nil), "BanPeerReq")
	proto.RegisterType((*UnbanPeerReq)(nil), "UnbanPeerReq")
	proto.RegisterType((*ListPeersReq)(nil), "ListPeersReq")
	proto.RegisterType((*ListPeersRes)(nil), "ListPeersRes")
	proto.RegisterType((*CheckoutReq)(nil), "CheckoutReq")
	proto.RegisterType((*CheckoutRes)(nil), "CheckoutRes")
	proto.RegisterType((*WriteAtReq)(nil), "WriteAtReq")
	proto.RegisterType((*WriteAtRes)(nil), "WriteAtRes")
	proto.RegisterType((*TruncateReq)(nil), "TruncateReq")
	proto.RegisterType((*TruncateRes)(nil), "TruncateRes")
	proto.RegisterType((*PreCommitReq)(nil), "PreCommitReq")
	proto.RegisterType((*PreCommitRes)(nil), "PreCommitRes")
	proto.RegisterType((*CommitReq)(nil), "CommitReq")
	proto.RegisterType((*CommitRes)(nil), "CommitRes")
	proto.RegisterType((*ReadAtReq)(nil), "ReadAtReq")
	proto.RegisterType((*ReadAtRes)(nil), "ReadAtRes")
	proto.RegisterType((*BlobInfoReq)(nil), "BlobInfoReq")
	proto.RegisterType((*ListBlobInfoReq)(nil), "ListBlobInfoReq")
	proto.RegisterType((*BlobInfoRes)(nil), "BlobInfoRes")
	proto.RegisterType((*SendUpdateReq)(nil), "SendUpdateReq")
	proto.RegisterType((*SendUpdateRes)(nil), "SendUpdateRes")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 911 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x56, 0x5f, 0x8b, 0x1b, 0x37,
	0x10, 0x67, 0x1d, 0x9f, 0xcf, 0x3b, 0x5e, 0x5f, 0x83, 0x08, 0xc1, 0x2c, 0xe5, 0x70, 0x14, 0x48,
	0x1d, 0x5a, 0x96, 0x4b, 0xfa, 0x10, 0x0a, 0x85, 0x72, 0x7f, 0x42, 0x7a, 0x34, 0x2d, 0xc7, 0x5e,
	0x43, 0x4b, 0xdf, 0xe4, 0xdd, 0xb9, 0x9c, 0x38, 0xef, 0x9f, 0x4a, 0xb2, 0x13, 0x7f, 0x95, 0xbe,
	0xf4, 0xad, 0x1f, 0xa4, 0x9f, 0xac, 0x48, 0xab, 0xdd, 0x95, 0xdc, 0x73, 0x29, 0x79, 0xd3, 0xfc,
	0x66, 0x34, 0xda, 0xd1, 0x6f, 0xe6, 0xa7, 0x85, 0x90, 0xd5, 0x3c, 0xa9, 0x45, 0xa5, 0x2a, 0x7a,
	0x08, 0x07, 0xaf, 0x8b, 0x5a, 0x6d, 0xe9, 0x1f, 0x01, 0x44, 0x6f, 0x50, 0x5d, 0x2b, 0xa6, 0xd6,
	0x32, 0x45, 0x49, 0x1e, 0xc3, 0xa8, 0x46, 0x14, 0x97, 0x17, 0x33, 0x98, 0x07, 0x8b, 0x28, 0xb5,
	0x16, 0xf9, 0x1c, 0x42, 0xbd, 0x3a, 0xaf, 0xd6, 0xa5, 0x9a, 0x3d, 0x9a, 0x07, 0x8b, 0x69, 0xda,
	0x03, 0x64, 0x0e, 0x93, 0x5b, 0x64, 0x79, 0xeb, 0x3f, 0x36, 0x7e, 0x17, 0x22, 0x33, 0x38, 0x54,
	0x1f, 0xcf, 0xb6, 0x0a, 0xe5, 0x6c, 0x31, 0x0f, 0x16, 0xc3, 0xb4, 0x35, 0xb5, 0x47, 0x58, 0xcf,
	0xcb, 0xc6, 0x63, 0x4d, 0xfa, 0x0d, 0x4c, 0xde, 0xa0, 0xfa, 0x89, 0x15, 0x28, 0x53, 0xfc, 0x9d,
	0x3c, 0x82, 0x03, 0xa9, 0x98, 0x50, 0xb3, 0x60, 0x1e, 0x2c, 0xc2, 0xb4, 0x31, 0x34, 0x9a, 0x99,
	0x43, 0x07, 0xe6, 0xd0, 0xc6, 0xa0, 0xdf, 0xb9, 0x5b, 0x25, 0x21, 0x30, 0x2c, 0x59, 0x81, 0x76,
	0xa7, 0x59, 0x9b, 0x8a, 0xd6, 0xcb, 0x15, 0xcf, 0x7e, 0xc0, 0xad, 0xd9, 0x1c, 0xa5, 0x3d, 0x40,
	0x7f, 0x05, 0x38, 0xcd, 0xf3, 0x2b, 0x44, 0xa1, 0x8f, 0xee, 0x6f, 0x25, 0xf0, 0x6e, 0xe5, 0x08,
	0x06, 0xbc, 0x36, 0x9b, 0xc3, 0x74, 0xc0, 0x6b, 0x42, 0x21, 0xda, 0xa0, 0xe0, 0x37, 0xdb, 0xab,
	0x26, 0xfa, 0xc1, 0x3c, 0x58, 0x8c, 0x53, 0x0f, 0xa3, 0xdf, 0x02, 0x9c, 0xb1, 0xb2, 0xcd, 0xdc,
	0x64, 0x08, 0xba, 0x0c, 0xc7, 0x00, 0xf9, 0x5a, 0x30, 0xc5, 0xab, 0xf2, 0xc7, 0x6b, 0x5b, 0x93,
	0x83, 0xd0, 0x63, 0x88, 0xde, 0x95, 0xcb, 0xbd, 0xfb, 0xe9, 0x11, 0x44, 0x6f, 0xb9, 0x54, 0xda,
	0xad, 0x2f, 0x8d, 0xfe, 0x1d, 0x78, 0x80, 0xfc, 0xdf, 0xa5, 0x3c, 0x86, 0xd1, 0x92, 0x95, 0x25,
	0xe6, 0xb6, 0x08, 0x6b, 0xe9, 0x6b, 0xcb, 0xaa, 0xb2, 0xc4, 0x4c, 0x61, 0x3e, 0x1b, 0x1a, 0x57,
	0x0f, 0xb8, 0x34, 0x1f, 0xec, 0xa5, 0x79, 0xe4, 0xd1, 0xac, 0x9b, 0xe7, 0xc3, 0x2d, 0x57, 0xb8,
	0xe2, 0x52, 0xe7, 0x3c, 0x34, 0x39, 0x5d, 0x88, 0x3e, 0x81, 0xc9, 0xf9, 0x2d, 0x66, 0x77, 0xd5,
	0x5a, 0xe9, 0x9a, 0xef, 0x61, 0xd3, 0x0f, 0x31, 0x84, 0xab, 0x8f, 0xb6, 0xc6, 0x69, 0x6a, 0xd6,
	0xf4, 0x2d, 0xc0, 0x2f, 0x82, 0x2b, 0x3c, 0x6d, 0x93, 0xec, 0x46, 0xe8, 0x9a, 0xab, 0x9b, 0x1b,
	0x89, 0x6d, 0x33, 0x59, 0x4b, 0xc7, 0xe6, 0x4c, 0x31, 0x73, 0x13, 0x51, 0x6a, 0xd6, 0x5e, 0x36,
	0xa9, 0x89, 0x5f, 0xea, 0x62, 0x34, 0xa4, 0xb0, 0xb4, 0x59, 0x3d, 0x8c, 0xc4, 0x30, 0xfe, 0xa0,
	0x77, 0xbc, 0x16, 0xc2, 0xde, 0x73, 0x67, 0xeb, 0xcf, 0xff, 0x59, 0xac, 0xcb, 0x8c, 0x29, 0xdc,
	0xf3, 0x71, 0x74, 0xea, 0x86, 0x48, 0x4a, 0x21, 0xba, 0x12, 0x78, 0x5e, 0x15, 0x05, 0xdf, 0x57,
	0x0f, 0x4d, 0xbc, 0x18, 0xa9, 0x9b, 0xab, 0x40, 0x71, 0xb7, 0xc2, 0xb4, 0xaa, 0x94, 0xe5, 0xdf,
	0x41, 0xe8, 0x16, 0xc2, 0xff, 0x4c, 0xa8, 0xc9, 0x57, 0xbc, 0x40, 0xa9, 0x58, 0xd1, 0xf4, 0xca,
	0x30, 0xed, 0x01, 0xed, 0x95, 0xfc, 0x7d, 0xc9, 0xd4, 0x5a, 0xa0, 0xbd, 0xab, 0x1e, 0xd0, 0xde,
	0xa5, 0xa8, 0x58, 0x9e, 0x31, 0xa9, 0xda, 0xc6, 0xe9, 0x00, 0x3a, 0xe9, 0x8f, 0x96, 0xf4, 0x12,
	0xc2, 0x14, 0x59, 0x7e, 0xba, 0x8f, 0xed, 0xbd, 0x44, 0x3d, 0x84, 0x07, 0x2b, 0x2c, 0xcd, 0xd9,
	0xd3, 0x54, 0x2f, 0xe9, 0xab, 0x3e, 0x95, 0x74, 0xb6, 0x05, 0xf7, 0xf2, 0x3b, 0x70, 0xf8, 0x7d,
	0x02, 0x93, 0xb3, 0x55, 0xb5, 0xbc, 0x2c, 0x6f, 0xaa, 0x7d, 0x3d, 0xf7, 0x05, 0x7c, 0xa6, 0x47,
	0xcb, 0x0d, 0xbb, 0x57, 0xa3, 0xe8, 0x9f, 0x03, 0x37, 0xd9, 0x27, 0xc8, 0x91, 0xee, 0x2f, 0x5e,
	0xd4, 0x95, 0x50, 0xdf, 0x23, 0x7f, 0x7f, 0xab, 0x6c, 0x85, 0x1e, 0xe6, 0x93, 0x33, 0xdc, 0x25,
	0xc7, 0xe7, 0xfe, 0x60, 0x97, 0x7b, 0x7d, 0x82, 0x40, 0x89, 0x62, 0x83, 0xb9, 0x89, 0x18, 0x99,
	0x08, 0x0f, 0xd3, 0x39, 0x04, 0x66, 0xc8, 0x37, 0x98, 0x9f, 0x2a, 0x33, 0xa8, 0xc3, 0xd4, 0x41,
	0xfc, 0x06, 0x18, 0xef, 0x36, 0x40, 0x0c, 0x63, 0xfd, 0x39, 0x4b, 0x56, 0xde, 0xcd, 0x42, 0xf3,
	0xfd, 0x9d, 0x4d, 0x9f, 0xc2, 0xf4, 0x1a, 0xcb, 0xfc, 0x5d, 0x9d, 0xf7, 0x13, 0xf0, 0xaf, 0xfb,
	0x7e, 0xe5, 0x07, 0x49, 0xf2, 0x0c, 0x8e, 0x04, 0x66, 0xbc, 0xe6, 0x58, 0xaa, 0xe6, 0xe5, 0x69,
	0x78, 0xdd, 0x41, 0x5f, 0xfe, 0x35, 0x84, 0xd1, 0xc5, 0x45, 0x7a, 0xb5, 0x79, 0x41, 0x28, 0x84,
	0xdd, 0x7b, 0x47, 0x46, 0x89, 0x79, 0x05, 0xe3, 0x69, 0xe2, 0xbd, 0x81, 0xc7, 0x70, 0x68, 0xb5,
	0x9f, 0x4c, 0x92, 0xfe, 0x15, 0x88, 0x6d, 0xb8, 0xf6, 0x5b, 0x05, 0x27, 0x93, 0xa4, 0xd7, 0xf2,
	0xce, 0x4f, 0x21, 0xec, 0x34, 0x9a, 0x4c, 0x13, 0x57, 0xaf, 0xbb, 0x98, 0x2f, 0x21, 0xec, 0x64,
	0x99, 0x4c, 0x13, 0x57, 0xb3, 0x63, 0xcf, 0x94, 0x27, 0x01, 0x79, 0x06, 0xe3, 0x56, 0xdc, 0x48,
	0x94, 0x38, 0x52, 0x18, 0xbb, 0x96, 0x24, 0x4f, 0xe1, 0xd0, 0x6a, 0x12, 0x99, 0x24, 0xbd, 0xd6,
	0xc5, 0x8e, 0xa1, 0xe5, 0x76, 0xdc, 0xea, 0x08, 0x89, 0x12, 0x47, 0x75, 0xba, 0x6f, 0x7b, 0x0e,
	0x61, 0x27, 0x1b, 0x64, 0x9a, 0xb8, 0x32, 0x13, 0x7b, 0xa6, 0x4e, 0x36, 0xb2, 0x71, 0x90, 0xf4,
	0x41, 0xfd, 0xda, 0x44, 0x34, 0x03, 0x48, 0x20, 0xe9, 0x86, 0x3a, 0xee, 0xd7, 0x92, 0x3c, 0x37,
	0x6f, 0x75, 0x3b, 0x1f, 0x24, 0x4a, 0x9c, 0x81, 0x8a, 0x5d, 0x4b, 0x92, 0x93, 0xe6, 0x31, 0xeb,
	0x62, 0x1f, 0x26, 0x3b, 0x03, 0xe8, 0xc7, 0x9f, 0x04, 0xe4, 0x2b, 0x80, 0xbe, 0x67, 0xc8, 0x51,
	0xe2, 0x75, 0x59, 0xec, 0xdb, 0xf2, 0x6c, 0xf8, 0xdb, 0x60, 0xf3, 0x62, 0x39, 0x32, 0x3f, 0x49,
	0x5f, 0xff, 0x13, 0x00, 0x00, 0xff, 0xff, 0xff, 0x34, 0xdc, 0xb7, 0x31, 0x09, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DDRPv1Client is the client API for DDRPv1 service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DDRPv1Client interface {
	GetStatus(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetStatusRes, error)
	AddPeer(ctx context.Context, in *AddPeerReq, opts ...grpc.CallOption) (*Empty, error)
	BanPeer(ctx context.Context, in *BanPeerReq, opts ...grpc.CallOption) (*Empty, error)
	UnbanPeer(ctx context.Context, in *UnbanPeerReq, opts ...grpc.CallOption) (*Empty, error)
	ListPeers(ctx context.Context, in *ListPeersReq, opts ...grpc.CallOption) (DDRPv1_ListPeersClient, error)
	Checkout(ctx context.Context, in *CheckoutReq, opts ...grpc.CallOption) (*CheckoutRes, error)
	WriteAt(ctx context.Context, in *WriteAtReq, opts ...grpc.CallOption) (*WriteAtRes, error)
	Truncate(ctx context.Context, in *TruncateReq, opts ...grpc.CallOption) (*Empty, error)
	PreCommit(ctx context.Context, in *PreCommitReq, opts ...grpc.CallOption) (*PreCommitRes, error)
	Commit(ctx context.Context, in *CommitReq, opts ...grpc.CallOption) (*CommitRes, error)
	ReadAt(ctx context.Context, in *ReadAtReq, opts ...grpc.CallOption) (*ReadAtRes, error)
	GetBlobInfo(ctx context.Context, in *BlobInfoReq, opts ...grpc.CallOption) (*BlobInfoRes, error)
	ListBlobInfo(ctx context.Context, in *ListBlobInfoReq, opts ...grpc.CallOption) (DDRPv1_ListBlobInfoClient, error)
	SendUpdate(ctx context.Context, in *SendUpdateReq, opts ...grpc.CallOption) (*SendUpdateRes, error)
}

type dDRPv1Client struct {
	cc *grpc.ClientConn
}

func NewDDRPv1Client(cc *grpc.ClientConn) DDRPv1Client {
	return &dDRPv1Client{cc}
}

func (c *dDRPv1Client) GetStatus(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetStatusRes, error) {
	out := new(GetStatusRes)
	err := c.cc.Invoke(ctx, "/DDRPv1/GetStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) AddPeer(ctx context.Context, in *AddPeerReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/DDRPv1/AddPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) BanPeer(ctx context.Context, in *BanPeerReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/DDRPv1/BanPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) UnbanPeer(ctx context.Context, in *UnbanPeerReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/DDRPv1/UnbanPeer", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) ListPeers(ctx context.Context, in *ListPeersReq, opts ...grpc.CallOption) (DDRPv1_ListPeersClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DDRPv1_serviceDesc.Streams[0], "/DDRPv1/ListPeers", opts...)
	if err != nil {
		return nil, err
	}
	x := &dDRPv1ListPeersClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DDRPv1_ListPeersClient interface {
	Recv() (*ListPeersRes, error)
	grpc.ClientStream
}

type dDRPv1ListPeersClient struct {
	grpc.ClientStream
}

func (x *dDRPv1ListPeersClient) Recv() (*ListPeersRes, error) {
	m := new(ListPeersRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dDRPv1Client) Checkout(ctx context.Context, in *CheckoutReq, opts ...grpc.CallOption) (*CheckoutRes, error) {
	out := new(CheckoutRes)
	err := c.cc.Invoke(ctx, "/DDRPv1/Checkout", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) WriteAt(ctx context.Context, in *WriteAtReq, opts ...grpc.CallOption) (*WriteAtRes, error) {
	out := new(WriteAtRes)
	err := c.cc.Invoke(ctx, "/DDRPv1/WriteAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) Truncate(ctx context.Context, in *TruncateReq, opts ...grpc.CallOption) (*Empty, error) {
	out := new(Empty)
	err := c.cc.Invoke(ctx, "/DDRPv1/Truncate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) PreCommit(ctx context.Context, in *PreCommitReq, opts ...grpc.CallOption) (*PreCommitRes, error) {
	out := new(PreCommitRes)
	err := c.cc.Invoke(ctx, "/DDRPv1/PreCommit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) Commit(ctx context.Context, in *CommitReq, opts ...grpc.CallOption) (*CommitRes, error) {
	out := new(CommitRes)
	err := c.cc.Invoke(ctx, "/DDRPv1/Commit", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) ReadAt(ctx context.Context, in *ReadAtReq, opts ...grpc.CallOption) (*ReadAtRes, error) {
	out := new(ReadAtRes)
	err := c.cc.Invoke(ctx, "/DDRPv1/ReadAt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) GetBlobInfo(ctx context.Context, in *BlobInfoReq, opts ...grpc.CallOption) (*BlobInfoRes, error) {
	out := new(BlobInfoRes)
	err := c.cc.Invoke(ctx, "/DDRPv1/GetBlobInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dDRPv1Client) ListBlobInfo(ctx context.Context, in *ListBlobInfoReq, opts ...grpc.CallOption) (DDRPv1_ListBlobInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DDRPv1_serviceDesc.Streams[1], "/DDRPv1/ListBlobInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &dDRPv1ListBlobInfoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type DDRPv1_ListBlobInfoClient interface {
	Recv() (*BlobInfoRes, error)
	grpc.ClientStream
}

type dDRPv1ListBlobInfoClient struct {
	grpc.ClientStream
}

func (x *dDRPv1ListBlobInfoClient) Recv() (*BlobInfoRes, error) {
	m := new(BlobInfoRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dDRPv1Client) SendUpdate(ctx context.Context, in *SendUpdateReq, opts ...grpc.CallOption) (*SendUpdateRes, error) {
	out := new(SendUpdateRes)
	err := c.cc.Invoke(ctx, "/DDRPv1/SendUpdate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DDRPv1Server is the server API for DDRPv1 service.
type DDRPv1Server interface {
	GetStatus(context.Context, *Empty) (*GetStatusRes, error)
	AddPeer(context.Context, *AddPeerReq) (*Empty, error)
	BanPeer(context.Context, *BanPeerReq) (*Empty, error)
	UnbanPeer(context.Context, *UnbanPeerReq) (*Empty, error)
	ListPeers(*ListPeersReq, DDRPv1_ListPeersServer) error
	Checkout(context.Context, *CheckoutReq) (*CheckoutRes, error)
	WriteAt(context.Context, *WriteAtReq) (*WriteAtRes, error)
	Truncate(context.Context, *TruncateReq) (*Empty, error)
	PreCommit(context.Context, *PreCommitReq) (*PreCommitRes, error)
	Commit(context.Context, *CommitReq) (*CommitRes, error)
	ReadAt(context.Context, *ReadAtReq) (*ReadAtRes, error)
	GetBlobInfo(context.Context, *BlobInfoReq) (*BlobInfoRes, error)
	ListBlobInfo(*ListBlobInfoReq, DDRPv1_ListBlobInfoServer) error
	SendUpdate(context.Context, *SendUpdateReq) (*SendUpdateRes, error)
}

func RegisterDDRPv1Server(s *grpc.Server, srv DDRPv1Server) {
	s.RegisterService(&_DDRPv1_serviceDesc, srv)
}

func _DDRPv1_GetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).GetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/GetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).GetStatus(ctx, req.(*Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_AddPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPeerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).AddPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/AddPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).AddPeer(ctx, req.(*AddPeerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_BanPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BanPeerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).BanPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/BanPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).BanPeer(ctx, req.(*BanPeerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_UnbanPeer_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UnbanPeerReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).UnbanPeer(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/UnbanPeer",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).UnbanPeer(ctx, req.(*UnbanPeerReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_ListPeers_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListPeersReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DDRPv1Server).ListPeers(m, &dDRPv1ListPeersServer{stream})
}

type DDRPv1_ListPeersServer interface {
	Send(*ListPeersRes) error
	grpc.ServerStream
}

type dDRPv1ListPeersServer struct {
	grpc.ServerStream
}

func (x *dDRPv1ListPeersServer) Send(m *ListPeersRes) error {
	return x.ServerStream.SendMsg(m)
}

func _DDRPv1_Checkout_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CheckoutReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).Checkout(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/Checkout",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).Checkout(ctx, req.(*CheckoutReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_WriteAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WriteAtReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).WriteAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/WriteAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).WriteAt(ctx, req.(*WriteAtReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_Truncate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TruncateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).Truncate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/Truncate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).Truncate(ctx, req.(*TruncateReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_PreCommit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PreCommitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).PreCommit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/PreCommit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).PreCommit(ctx, req.(*PreCommitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_Commit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CommitReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).Commit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/Commit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).Commit(ctx, req.(*CommitReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_ReadAt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadAtReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).ReadAt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/ReadAt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).ReadAt(ctx, req.(*ReadAtReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_GetBlobInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BlobInfoReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).GetBlobInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/GetBlobInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).GetBlobInfo(ctx, req.(*BlobInfoReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DDRPv1_ListBlobInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ListBlobInfoReq)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(DDRPv1Server).ListBlobInfo(m, &dDRPv1ListBlobInfoServer{stream})
}

type DDRPv1_ListBlobInfoServer interface {
	Send(*BlobInfoRes) error
	grpc.ServerStream
}

type dDRPv1ListBlobInfoServer struct {
	grpc.ServerStream
}

func (x *dDRPv1ListBlobInfoServer) Send(m *BlobInfoRes) error {
	return x.ServerStream.SendMsg(m)
}

func _DDRPv1_SendUpdate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendUpdateReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DDRPv1Server).SendUpdate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/DDRPv1/SendUpdate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DDRPv1Server).SendUpdate(ctx, req.(*SendUpdateReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _DDRPv1_serviceDesc = grpc.ServiceDesc{
	ServiceName: "DDRPv1",
	HandlerType: (*DDRPv1Server)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetStatus",
			Handler:    _DDRPv1_GetStatus_Handler,
		},
		{
			MethodName: "AddPeer",
			Handler:    _DDRPv1_AddPeer_Handler,
		},
		{
			MethodName: "BanPeer",
			Handler:    _DDRPv1_BanPeer_Handler,
		},
		{
			MethodName: "UnbanPeer",
			Handler:    _DDRPv1_UnbanPeer_Handler,
		},
		{
			MethodName: "Checkout",
			Handler:    _DDRPv1_Checkout_Handler,
		},
		{
			MethodName: "WriteAt",
			Handler:    _DDRPv1_WriteAt_Handler,
		},
		{
			MethodName: "Truncate",
			Handler:    _DDRPv1_Truncate_Handler,
		},
		{
			MethodName: "PreCommit",
			Handler:    _DDRPv1_PreCommit_Handler,
		},
		{
			MethodName: "Commit",
			Handler:    _DDRPv1_Commit_Handler,
		},
		{
			MethodName: "ReadAt",
			Handler:    _DDRPv1_ReadAt_Handler,
		},
		{
			MethodName: "GetBlobInfo",
			Handler:    _DDRPv1_GetBlobInfo_Handler,
		},
		{
			MethodName: "SendUpdate",
			Handler:    _DDRPv1_SendUpdate_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ListPeers",
			Handler:       _DDRPv1_ListPeers_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "ListBlobInfo",
			Handler:       _DDRPv1_ListBlobInfo_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
